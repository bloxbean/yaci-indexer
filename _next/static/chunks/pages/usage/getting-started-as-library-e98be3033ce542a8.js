(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[716],{659:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/usage/getting-started-as-library",function(){return n(5345)}])},5345:function(e,a,n){"use strict";n.r(a),n.d(a,{__toc:function(){return l}});var o=n(5893),r=n(2673),s=n(3393),t=n(8426);n(9128);var i=n(2643);let l=[{depth:2,value:"Prerequisites",id:"prerequisites"},{depth:2,value:"Create a Spring Boot application",id:"create-a-spring-boot-application"},{depth:2,value:"Add Dependencies",id:"add-dependencies"},{depth:2,value:"Add required store starters",id:"add-required-store-starters"},{depth:2,value:"Configuration",id:"configuration"},{depth:3,value:"Yaci Store Configuration (Mandatory)",id:"yaci-store-configuration-mandatory"},{depth:4,value:"Network Configuration",id:"network-configuration"},{depth:4,value:"Database Configuration",id:"database-configuration"},{depth:3,value:"Optional Configuration",id:"optional-configuration"},{depth:4,value:"Genesis files Configuration",id:"genesis-files-configuration"},{depth:4,value:"N2C Configuration",id:"n2c-configuration"},{depth:2,value:"Customization - Override default behavior",id:"customization---override-default-behavior"},{depth:3,value:"Custom Storage",id:"custom-storage"},{depth:3,value:"Custom Processor",id:"custom-processor"},{depth:3,value:"Rollback Handling",id:"rollback-handling"}];function _createMdxContent(e){let a=Object.assign({h1:"h1",p:"p",strong:"strong",ul:"ul",li:"li",a:"a",h2:"h2",code:"code",pre:"pre",span:"span",h3:"h3",h4:"h4"},(0,i.a)(),e.components);return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(a.h1,{children:"Use Yaci Store as a Library"}),"\n",(0,o.jsx)(a.p,{children:"The power of Yaci Store is that it can be used as a library in your own application. This allows you to build your own application on top of Yaci Store.\nYou have full control over what data you want to index. This is achieved by using modular architecture. Not only you can include required stores in\nyour application, you can also override the default behavior of the stores. For example, you can override the default behavior of the Utxo store to store\nutxos in a different database, or store only utxos specific to an address or store metadata with specific labels. This is achieved by using the\nspring framework's dependency injection feature."}),"\n",(0,o.jsx)(a.p,{children:"In this guide, we will show you how to use Yaci Store as a library in your own application."}),"\n",(0,o.jsx)(a.p,{children:(0,o.jsx)(a.strong,{children:"Sample applications:"})}),"\n",(0,o.jsxs)(a.ul,{children:["\n",(0,o.jsxs)(a.li,{children:["Sample ",(0,o.jsx)(a.a,{href:"https://github.com/bloxbean/metadata-indexer",children:"Metadata Indexer"})," project using Yaci Store as a library."]}),"\n",(0,o.jsxs)(a.li,{children:["A scoped indexer for ",(0,o.jsx)(a.a,{href:"https://github.com/cardano-foundation/adahandle-resolver",children:"Ada Handler"})]}),"\n"]}),"\n",(0,o.jsx)(a.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(a.ul,{children:["\n",(0,o.jsx)(a.li,{children:"Java 21"}),"\n",(0,o.jsx)(a.li,{children:"Spring Boot 3.2.x (Tested with Spring Boot 3.2.0, 3.2.1, 3.2.2)"}),"\n"]}),"\n",(0,o.jsx)(a.h2,{id:"create-a-spring-boot-application",children:"Create a Spring Boot application"}),"\n",(0,o.jsxs)(a.p,{children:["You can use the ",(0,o.jsx)(a.a,{href:"https://start.spring.io/",children:"Spring Initializr"})," to create a Spring Boot application."]}),"\n",(0,o.jsx)(a.h2,{id:"add-dependencies",children:"Add Dependencies"}),"\n",(0,o.jsxs)(a.p,{children:["Apart from standard spring boot dependencies, add the following dependency to your ",(0,o.jsx)(a.code,{children:"build.gradle"})," or ",(0,o.jsx)(a.code,{children:"pom.xml"})," file.\nThis will add the Yaci Store Core modules to your project as a dependency. Core modules are responsible for fetching data from the blockchain and\npublishing them as events."]}),"\n",(0,o.jsx)(a.pre,{"data-language":"groovy","data-theme":"default",children:(0,o.jsx)(a.code,{"data-language":"groovy","data-theme":"default",children:(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"implementation "}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'com.bloxbean.cardano:yaci-store-spring-boot-starter:<version>'"})]})})}),"\n",(0,o.jsx)(a.p,{children:"For pom.xml"}),"\n",(0,o.jsx)(a.pre,{"data-language":"xml","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"xml","data-theme":"default",children:[(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"<"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"dependency"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"groupId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">com.bloxbean.cardano</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"groupId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"artifactId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">yaci-store-spring-boot-starter</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"artifactId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"version"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">{version}</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"version"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"dependency"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]})]})}),"\n",(0,o.jsx)(a.h2,{id:"add-required-store-starters",children:"Add required store starters"}),"\n",(0,o.jsx)(a.p,{children:"Now you can add the required store starters to your project. For example, if you want to add the metadata store, add the following dependency."}),"\n",(0,o.jsx)(a.pre,{"data-language":"groovy","data-theme":"default",children:(0,o.jsx)(a.code,{"data-language":"groovy","data-theme":"default",children:(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"implementation "}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'com.bloxbean.cardano:yaci-store-metadata-spring-boot-starter:<version>'"})]})})}),"\n",(0,o.jsx)(a.p,{children:"For pom.xml"}),"\n",(0,o.jsx)(a.pre,{"data-language":"xml","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"xml","data-theme":"default",children:[(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"<"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"dependency"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"groupId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">com.bloxbean.cardano</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"groupId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"artifactId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">yaci-store-metadata-spring-boot-starter</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"artifactId"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    <"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"version"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">{version}</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"version"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]}),"\n",(0,o.jsxs)(a.span,{className:"line",children:[(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"</"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-token-string-expression)"},children:"dependency"}),(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:">"})]})]})}),"\n",(0,o.jsxs)(a.p,{children:[(0,o.jsx)(a.strong,{children:"Note:"})," You can add multiple store starters to your project. Full list of supported starters can be found ",(0,o.jsx)(a.a,{href:"overview?#spring-boot-starter",children:"here"})]}),"\n",(0,o.jsx)(a.h2,{id:"configuration",children:"Configuration"}),"\n",(0,o.jsxs)(a.p,{children:["Add following flyway configuration to your ",(0,o.jsx)(a.code,{children:"application.yml"})," file. (",(0,o.jsx)(a.strong,{children:"Mandatory"}),")"]}),"\n",(0,o.jsx)(a.pre,{"data-language":"xml","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"xml","data-theme":"default",children:[(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"spring:"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"  flyway:"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    locations: classpath:db/store/{vendor}"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"    out-of-order: true"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:" "}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"apiPrefix: /api/v1"})})]})}),"\n",(0,o.jsxs)(a.p,{children:[(0,o.jsx)(a.strong,{children:"Note:"})," If you are using Yaci Store 0.0.11 or earlier, use ",(0,o.jsx)(a.code,{children:"classpath:db/migration/{vendor}"})," as the location."]}),"\n",(0,o.jsxs)(a.p,{children:["You can add your application specific flyway configuration as well. ",(0,o.jsx)(a.strong,{children:"For example,"})," you may want to add another location for your application.\nFlyway ",(0,o.jsx)(a.code,{children:"location"})," property allows you to specify multiple locations."]}),"\n",(0,o.jsx)(a.h3,{id:"yaci-store-configuration-mandatory",children:"Yaci Store Configuration (Mandatory)"}),"\n",(0,o.jsxs)(a.p,{children:["Download the ",(0,o.jsx)(a.code,{children:"application.properties"}),' file from the release section and place it in a folder named "config" in your project root directory.\nThe application will automatically pick up the configuration file.']}),"\n",(0,o.jsxs)(a.p,{children:["Alternatively, you can add all yaci store specific configurations in ",(0,o.jsx)(a.code,{children:"application.yml"})," file as well."]}),"\n",(0,o.jsx)(a.p,{children:"Update configuration file with your own values. Some of the key properties are mentioned below."}),"\n",(0,o.jsx)(a.h4,{id:"network-configuration",children:"Network Configuration"}),"\n",(0,o.jsx)(a.pre,{"data-language":"text","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"text","data-theme":"default",children:[(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.host=preprod-node.world.dev.cardano.org"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.port=30000"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.protocol-magic=1"})})]})}),"\n",(0,o.jsx)(a.h4,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,o.jsx)(a.p,{children:"Uncomment and edit the following properties to configure the database connection."}),"\n",(0,o.jsx)(a.pre,{"data-language":"text","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"text","data-theme":"default",children:[(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"spring.datasource.url="})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"spring.datasource.username=user"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"spring.datasource.password="})})]})}),"\n",(0,o.jsx)(a.h3,{id:"optional-configuration",children:"Optional Configuration"}),"\n",(0,o.jsx)(a.p,{children:"The followings are optional configuration. You can leave them as-is."}),"\n",(0,o.jsx)(a.h4,{id:"genesis-files-configuration",children:"Genesis files Configuration"}),"\n",(0,o.jsx)(a.p,{children:"Configure genesis files location. This is required for few stores like Utxo store, account aggregate etc."}),"\n",(0,o.jsx)(a.pre,{"data-language":"text","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"text","data-theme":"default",children:[(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.byron-genesis-file=/Users/satya/cardano-node/preprod/files/byron-genesis.json"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"store.cardano.shelley-genesis-file=/Users/satya/cardano-node/preprod/files/shelley-genesis.json"})})]})}),"\n",(0,o.jsx)(a.h4,{id:"n2c-configuration",children:"N2C Configuration"}),"\n",(0,o.jsx)(a.p,{children:"The following properties are required for node-to-client (n2c) communication. This is required for transaction submission,\nfetching protocol parameters etc. If you don't need these functionalities, you can leave them commented."}),"\n",(0,o.jsx)(a.pre,{"data-language":"text","data-theme":"default",children:(0,o.jsxs)(a.code,{"data-language":"text","data-theme":"default",children:[(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"#store.cardano.n2c-node-socket-path=/Users/satya/work/cardano-node/preprod-8.1.2/db/node.socket"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"}})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:'# If you are accessing n2c through a relay like "socat", uncomment and edit the following properties.'})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"#store.cardano.n2c-host=<relay_host>"})}),"\n",(0,o.jsx)(a.span,{className:"line",children:(0,o.jsx)(a.span,{style:{color:"var(--shiki-color-text)"},children:"#store.cardano.n2c-port=<relay_port>"})})]})}),"\n",(0,o.jsx)(a.p,{children:"Now you are ready to use Yaci Store in your application. During application startup, Yaci Store will create all the required tables in the database and\nstart syncing the blockchain data and publish them as events and process them."}),"\n",(0,o.jsx)(a.h2,{id:"customization---override-default-behavior",children:"Customization - Override default behavior"}),"\n",(0,o.jsx)(a.h3,{id:"custom-storage",children:(0,o.jsx)(a.strong,{children:"Custom Storage"})}),"\n",(0,o.jsx)(a.p,{children:"Yaci Store provides a default storage implementation which stores all data in yaci store defined table.\nBut you can override this default implementation and provide your own storage implementation. Check out sample projects mentioned above for more details."}),"\n",(0,o.jsxs)(a.p,{children:[(0,o.jsx)(a.strong,{children:"For example:"})," If you only want to store a specific metadata label, you can extend the default storage implementation and filter out the labels you want to store."]}),"\n",(0,o.jsx)(a.h3,{id:"custom-processor",children:(0,o.jsx)(a.strong,{children:"Custom Processor"})}),"\n",(0,o.jsx)(a.p,{children:"Ideally you don't need to have your own custom processor, but if you want to do some custom processing, you can listen to both core or derived events and do your custom processing."}),"\n",(0,o.jsx)(a.h3,{id:"rollback-handling",children:(0,o.jsx)(a.strong,{children:"Rollback Handling"})}),"\n",(0,o.jsx)(a.p,{children:"If you are using default storage implementation or a custom storage by extending default storage, Yaci Store will automatically handle rollbacks."}),"\n",(0,o.jsxs)(a.p,{children:["But if you have your own custom processor or different storage implementation using separate database/table, you need to handle rollbacks in your custom processor by listening to RollbackEvent.\nFor more details on how to handle rollbacks, check ",(0,o.jsx)(a.a,{href:"design#handling-rollbacks",children:"Rollback Handling"})," and also make sure all your operations are idempotent."]})]})}let c={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:a}=Object.assign({},(0,i.a)(),e.components);return a?(0,o.jsx)(a,{...e,children:(0,o.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/usage/getting-started-as-library.mdx",route:"/usage/getting-started-as-library",timestamp:1715132296e3,pageMap:[{kind:"Meta",data:{overview:"Overview",design:"Design",build_run:"Build & Run",usage:{title:"Usage"},stores:"Stores",about:{title:"About",type:"page"}}},{kind:"MdxPage",name:"about",route:"/about"},{kind:"MdxPage",name:"build_run",route:"/build_run"},{kind:"MdxPage",name:"design",route:"/design"},{kind:"MdxPage",name:"overview",route:"/overview"},{kind:"Folder",name:"stores",route:"/stores",children:[{kind:"MdxPage",name:"overview",route:"/stores/overview"},{kind:"Meta",data:{overview:"Overview"}}]},{kind:"Folder",name:"usage",route:"/usage",children:[{kind:"Meta",data:{"getting-started-as-library":"As Library","getting-started-out-of-box":"Out of Box Indexers","aggregation-app-getting-started":"Aggregation App (Account Balance)"}},{kind:"MdxPage",name:"aggregation-app-getting-started",route:"/usage/aggregation-app-getting-started"},{kind:"MdxPage",name:"getting-started-as-library",route:"/usage/getting-started-as-library"},{kind:"MdxPage",name:"getting-started-out-of-box",route:"/usage/getting-started-out-of-box"}]}],flexsearch:{codeblocks:!0},title:"Use Yaci Store as a Library",headings:l},pageNextRoute:"/usage/getting-started-as-library",nextraLayout:s.ZP,themeConfig:t.Z};a.default=(0,r.j)(c)},8426:function(e,a,n){"use strict";var o=n(5893);n(7294);let r={logo:(0,o.jsx)("span",{children:(0,o.jsx)("b",{children:"Yaci Store"})}),project:{link:"https://github.com/bloxbean/yaci-store"},chat:{link:"https://discord.gg/JtQ54MSw6p"},docsRepositoryBase:"https://github.com/bloxbean/yaci-store/tree/main/docs",footer:{text:"\xa9 2024 BloxBean project"},useNextSeoProps:()=>({titleTemplate:"%s – Yaci Store"}),head:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)("meta",{property:"description",content:"Yaci Store - A modular Java library for developers who are keen on building their own custom indexer for Cardano"}),(0,o.jsx)("meta",{property:"og:title",content:"Yaci Store - A modular Java library for developers who are keen on building their own custom indexer for Cardano"}),(0,o.jsx)("meta",{property:"og:description",content:"Yaci Store - A modular Java library for developers who are keen on building their own custom indexer for Cardano"})]})};a.Z=r},5789:function(){}},function(e){e.O(0,[774,890,888,179],function(){return e(e.s=659)}),_N_E=e.O()}]);